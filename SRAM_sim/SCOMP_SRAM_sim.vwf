/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000000.0;
	SIMULATION_TIME = 30000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

USER_TYPE("|SCOMP_SRAM|SCOMP:inst|STATE")
{
	VALUES = "STATE.RESET_PC", "STATE.FETCH", "STATE.DECODE", "STATE.EX_LOAD", "STATE.EX_STORE", "STATE.EX_STORE2", "STATE.EX_ILOAD", "STATE.EX_ISTORE", "STATE.EX_LOADI", "STATE.EX_ADD", "STATE.EX_SUB", "STATE.EX_ADDI", "STATE.EX_JUMP", "STATE.EX_JNEG", "STATE.EX_JPOS", "STATE.EX_JZERO", "STATE.EX_CALL", "STATE.EX_RETURN", "STATE.EX_RETI", "STATE.EX_AND", "STATE.EX_OR", "STATE.EX_XOR", "STATE.EX_SHIFT", "STATE.EX_IN", "STATE.EX_IN2", "STATE.EX_OUT", "STATE.EX_OUT2";
}

USER_TYPE("__SRAM:inst2|STATE")
{
	VALUES = "Undefined", "STATE.IDLE", "STATE.WRITE_EN", "STATE.DATA_SEND", "STATE.WRITE_DISABLE", "STATE.READ_DATA1", "STATE.READ_DATA2", "STATE.READ_DATA3", "STATE.READ_DATA4";
}

USER_TYPE("__SRAM:inst7|STATE")
{
	VALUES = "Undefined", "STATE.IDLE", "STATE.WRITE_EN", "STATE.DATA_SEND", "STATE.WRITE_DISABLE", "STATE.READ_DATA1", "STATE.READ_DATA2", "STATE.READ_DATA3", "STATE.READ_DATA4", "STATE.SEND";
}

USER_TYPE("|SCOMP_SRAM|SRAM:inst8|STATE")
{
	VALUES = "STATE.IDLE", "STATE.WRITE_EN", "STATE.DATA_SEND", "STATE.WRITE_DISABLE", "STATE.READ_DATA1", "STATE.READ_DATA2", "STATE.READ_DATA3", "STATE.READ_DATA4", "STATE.SEND";
}

SIGNAL("clk_50")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("reset_n")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sram_addr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 18;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sram_addr[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_addr";
}

SIGNAL("sram_addr[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_addr";
}

SIGNAL("sram_addr[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_addr";
}

SIGNAL("sram_addr[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_addr";
}

SIGNAL("sram_addr[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_addr";
}

SIGNAL("sram_addr[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_addr";
}

SIGNAL("sram_addr[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_addr";
}

SIGNAL("sram_addr[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_addr";
}

SIGNAL("sram_addr[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_addr";
}

SIGNAL("sram_addr[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_addr";
}

SIGNAL("sram_addr[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_addr";
}

SIGNAL("sram_addr[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_addr";
}

SIGNAL("sram_addr[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_addr";
}

SIGNAL("sram_addr[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_addr";
}

SIGNAL("sram_addr[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_addr";
}

SIGNAL("sram_addr[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_addr";
}

SIGNAL("sram_addr[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_addr";
}

SIGNAL("sram_addr[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_addr";
}

SIGNAL("sram_dq")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sram_dq[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_dq";
}

SIGNAL("sram_dq[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_dq";
}

SIGNAL("sram_dq[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_dq";
}

SIGNAL("sram_dq[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_dq";
}

SIGNAL("sram_dq[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_dq";
}

SIGNAL("sram_dq[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_dq";
}

SIGNAL("sram_dq[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_dq";
}

SIGNAL("sram_dq[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_dq";
}

SIGNAL("sram_dq[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_dq";
}

SIGNAL("sram_dq[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_dq";
}

SIGNAL("sram_dq[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_dq";
}

SIGNAL("sram_dq[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_dq";
}

SIGNAL("sram_dq[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_dq";
}

SIGNAL("sram_dq[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_dq";
}

SIGNAL("sram_dq[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_dq";
}

SIGNAL("sram_dq[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sram_dq";
}

SIGNAL("sram_oe_n")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sram_we_n")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SCOMP:inst|AC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("SCOMP:inst|AC[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|STATE")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "|SCOMP_SRAM|SCOMP:inst|STATE";
}

SIGNAL("io_cycle")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("io_write")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("divider 2242")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("divider 1743")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("io_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("io_data[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "io_data";
}

SIGNAL("io_data[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "io_data";
}

SIGNAL("io_data[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "io_data";
}

SIGNAL("io_data[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "io_data";
}

SIGNAL("io_data[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "io_data";
}

SIGNAL("io_data[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "io_data";
}

SIGNAL("io_data[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "io_data";
}

SIGNAL("io_data[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "io_data";
}

SIGNAL("io_data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "io_data";
}

SIGNAL("io_data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "io_data";
}

SIGNAL("io_data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "io_data";
}

SIGNAL("io_data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "io_data";
}

SIGNAL("io_data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "io_data";
}

SIGNAL("io_data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "io_data";
}

SIGNAL("io_data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "io_data";
}

SIGNAL("io_data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "io_data";
}

SIGNAL("SRAM:inst8|STATE")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "|SCOMP_SRAM|SRAM:inst8|STATE";
}

TRANSITION_LIST("clk_50")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 50000;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("reset_n")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 999980.0;
	}
}

TRANSITION_LIST("sram_addr[17]")
{
	NODE
	{
		REPEAT = 1;
				LEVEL X FOR 670.0;
		LEVEL 0 FOR 29330.0;
	}
}

TRANSITION_LIST("sram_addr[16]")
{
	NODE
	{
		REPEAT = 1;
				LEVEL X FOR 670.0;
		LEVEL 0 FOR 29330.0;
	}
}

TRANSITION_LIST("sram_addr[15]")
{
	NODE
	{
		REPEAT = 1;
				LEVEL X FOR 1230.0;
		LEVEL 0 FOR 28770.0;
	}
}

TRANSITION_LIST("sram_addr[14]")
{
	NODE
	{
		REPEAT = 1;
				LEVEL X FOR 1230.0;
		LEVEL 0 FOR 28770.0;
	}
}

TRANSITION_LIST("sram_addr[13]")
{
	NODE
	{
		REPEAT = 1;
				LEVEL X FOR 1230.0;
		LEVEL 0 FOR 28770.0;
	}
}

TRANSITION_LIST("sram_addr[12]")
{
	NODE
	{
		REPEAT = 1;
				LEVEL X FOR 1230.0;
		LEVEL 0 FOR 28770.0;
	}
}

TRANSITION_LIST("sram_addr[11]")
{
	NODE
	{
		REPEAT = 1;
				LEVEL X FOR 1230.0;
		LEVEL 0 FOR 28770.0;
	}
}

TRANSITION_LIST("sram_addr[10]")
{
	NODE
	{
		REPEAT = 1;
				LEVEL X FOR 1230.0;
		LEVEL 0 FOR 28770.0;
	}
}

TRANSITION_LIST("sram_addr[9]")
{
	NODE
	{
		REPEAT = 1;
				LEVEL X FOR 1230.0;
		LEVEL 0 FOR 28770.0;
	}
}

TRANSITION_LIST("sram_addr[8]")
{
	NODE
	{
		REPEAT = 1;
				LEVEL X FOR 1230.0;
		LEVEL 0 FOR 28770.0;
	}
}

TRANSITION_LIST("sram_addr[7]")
{
	NODE
	{
		REPEAT = 1;
				LEVEL X FOR 1230.0;
		LEVEL 0 FOR 28770.0;
	}
}

TRANSITION_LIST("sram_addr[6]")
{
	NODE
	{
		REPEAT = 1;
				LEVEL X FOR 1230.0;
		LEVEL 0 FOR 28770.0;
	}
}

TRANSITION_LIST("sram_addr[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1230.0;
		LEVEL 0 FOR 2240.0;
		LEVEL 1 FOR 1120.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 23010.0;
	}
}

TRANSITION_LIST("sram_addr[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1230.0;
		LEVEL 0 FOR 1120.0;
		LEVEL 1 FOR 1120.0;
		LEVEL 0 FOR 2320.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 23010.0;
	}
}

TRANSITION_LIST("sram_addr[3]")
{
	NODE
	{
		REPEAT = 1;
				LEVEL X FOR 1230.0;
		LEVEL 0 FOR 28770.0;
	}
}

TRANSITION_LIST("sram_addr[2]")
{
	NODE
	{
		REPEAT = 1;
				LEVEL X FOR 1230.0;
		LEVEL 0 FOR 28770.0;
	}
}

TRANSITION_LIST("sram_addr[1]")
{
	NODE
	{
		REPEAT = 1;
				LEVEL X FOR 1230.0;
		LEVEL 1 FOR 28770.0;
	}
}

TRANSITION_LIST("sram_addr[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1230.0;
		LEVEL 0 FOR 2240.0;
		LEVEL 1 FOR 1120.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 23010.0;
	}
}

TRANSITION_LIST("sram_dq[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1850.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 1080.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 820.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL Z FOR 1140.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 22590.0;
	}
}

TRANSITION_LIST("sram_dq[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1850.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 1080.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 820.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL Z FOR 1140.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 22590.0;
	}
}

TRANSITION_LIST("sram_dq[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1850.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 1080.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 820.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL Z FOR 1140.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 22590.0;
	}
}

TRANSITION_LIST("sram_dq[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1850.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 1080.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 820.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL Z FOR 1140.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 22590.0;
	}
}

TRANSITION_LIST("sram_dq[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1850.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 1080.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 820.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL Z FOR 1140.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 22590.0;
	}
}

TRANSITION_LIST("sram_dq[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1850.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 1080.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 820.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL Z FOR 1140.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 22590.0;
	}
}

TRANSITION_LIST("sram_dq[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1850.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 1080.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 820.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL Z FOR 1140.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 22590.0;
	}
}

TRANSITION_LIST("sram_dq[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1850.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 1080.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 820.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL Z FOR 1140.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 22590.0;
	}
}

TRANSITION_LIST("sram_dq[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1850.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 1080.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 820.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL Z FOR 1140.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 22590.0;
	}
}

TRANSITION_LIST("sram_dq[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1850.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 1080.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 820.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL Z FOR 1140.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 22590.0;
	}
}

TRANSITION_LIST("sram_dq[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1850.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 1080.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 820.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL Z FOR 1140.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 22590.0;
	}
}

TRANSITION_LIST("sram_dq[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1850.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 1080.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 820.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL Z FOR 1140.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 22590.0;
	}
}

TRANSITION_LIST("sram_dq[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1850.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 1080.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 820.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL Z FOR 1140.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 22590.0;
	}
}

TRANSITION_LIST("sram_dq[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1850.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 1080.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 820.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL Z FOR 1140.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 22590.0;
	}
}

TRANSITION_LIST("sram_dq[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1850.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 1080.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL Z FOR 820.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 1140.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 1140.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 22590.0;
	}
}

TRANSITION_LIST("sram_dq[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1850.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 1080.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 1080.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 820.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 1140.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 1140.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 22590.0;
	}
}

TRANSITION_LIST("sram_oe_n")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 610.0;
		LEVEL 1 FOR 4340.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 1140.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 22590.0;
	}
}

TRANSITION_LIST("sram_we_n")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 610.0;
		LEVEL 1 FOR 1220.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 1080.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25890.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5230.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 22370.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5230.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 22370.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5230.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 22370.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5230.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 22370.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5230.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 22370.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5230.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 22370.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5230.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 22370.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5230.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 22370.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5230.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 22370.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5230.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 22370.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3230.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 1440.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 320.0;
		LEVEL 1 FOR 880.0;
		LEVEL X FOR 22370.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2110.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 2560.0;
		LEVEL X FOR 320.0;
		LEVEL 1 FOR 880.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 22370.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5230.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 22370.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5230.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 320.0;
		LEVEL 0 FOR 880.0;
		LEVEL X FOR 22370.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 990.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 3120.0;
		LEVEL X FOR 320.0;
		LEVEL 1 FOR 880.0;
		LEVEL X FOR 320.0;
		LEVEL 1 FOR 880.0;
		LEVEL X FOR 22370.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1550.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 1120.0;
		LEVEL 1 FOR 1120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 880.0;
			LEVEL X FOR 320.0;
		}
		LEVEL 1 FOR 880.0;
		LEVEL X FOR 22370.0;
	}
}

TRANSITION_LIST("SCOMP:inst|STATE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL STATE.RESET_PC FOR 190.0;
		LEVEL STATE.FETCH FOR 80.0;
		LEVEL STATE.DECODE FOR 80.0;
		LEVEL STATE.EX_LOADI FOR 80.0;
		LEVEL STATE.FETCH FOR 80.0;
		LEVEL STATE.DECODE FOR 80.0;
		LEVEL STATE.EX_OUT FOR 80.0;
		LEVEL STATE.EX_OUT2 FOR 80.0;
		LEVEL STATE.FETCH FOR 80.0;
		LEVEL STATE.DECODE FOR 80.0;
		LEVEL STATE.EX_LOAD FOR 80.0;
		LEVEL STATE.FETCH FOR 80.0;
		LEVEL STATE.DECODE FOR 80.0;
		LEVEL STATE.EX_OUT FOR 80.0;
		LEVEL STATE.EX_OUT2 FOR 80.0;
		LEVEL STATE.FETCH FOR 80.0;
		LEVEL STATE.DECODE FOR 80.0;
		LEVEL STATE.EX_LOADI FOR 80.0;
		LEVEL STATE.FETCH FOR 80.0;
		LEVEL STATE.DECODE FOR 80.0;
		LEVEL STATE.EX_OUT FOR 80.0;
		LEVEL STATE.EX_OUT2 FOR 80.0;
		LEVEL STATE.FETCH FOR 80.0;
		LEVEL STATE.DECODE FOR 80.0;
		LEVEL STATE.EX_LOAD FOR 80.0;
		LEVEL STATE.FETCH FOR 80.0;
		LEVEL STATE.DECODE FOR 80.0;
		LEVEL STATE.EX_OUT FOR 80.0;
		LEVEL STATE.EX_OUT2 FOR 80.0;
		LEVEL STATE.FETCH FOR 80.0;
		LEVEL STATE.DECODE FOR 80.0;
		LEVEL STATE.EX_LOADI FOR 80.0;
		LEVEL STATE.FETCH FOR 80.0;
		LEVEL STATE.DECODE FOR 80.0;
		LEVEL STATE.EX_OUT FOR 80.0;
		LEVEL STATE.EX_OUT2 FOR 80.0;
		LEVEL STATE.FETCH FOR 80.0;
		LEVEL STATE.DECODE FOR 80.0;
		LEVEL STATE.EX_LOAD FOR 80.0;
		LEVEL STATE.FETCH FOR 80.0;
		LEVEL STATE.DECODE FOR 80.0;
		LEVEL STATE.EX_OUT FOR 80.0;
		LEVEL STATE.EX_OUT2 FOR 80.0;
		LEVEL STATE.FETCH FOR 80.0;
		LEVEL STATE.DECODE FOR 80.0;
		LEVEL STATE.EX_LOADI FOR 80.0;
		LEVEL STATE.FETCH FOR 80.0;
		LEVEL STATE.DECODE FOR 80.0;
		LEVEL STATE.EX_OUT FOR 80.0;
		LEVEL STATE.EX_OUT2 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL STATE.FETCH FOR 80.0;
			LEVEL STATE.DECODE FOR 80.0;
			LEVEL STATE.EX_LOAD FOR 80.0;
			NODE
			{
				REPEAT = 2;
				LEVEL STATE.FETCH FOR 80.0;
				LEVEL STATE.DECODE FOR 80.0;
				LEVEL STATE.EX_OUT FOR 80.0;
				LEVEL STATE.EX_OUT2 FOR 80.0;
			}
			LEVEL STATE.FETCH FOR 80.0;
			LEVEL STATE.DECODE FOR 80.0;
			LEVEL STATE.EX_IN FOR 80.0;
			LEVEL STATE.EX_IN2 FOR 80.0;
		}
		LEVEL STATE.FETCH FOR 80.0;
		LEVEL STATE.DECODE FOR 80.0;
		LEVEL STATE.EX_LOAD FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL STATE.FETCH FOR 80.0;
			LEVEL STATE.DECODE FOR 80.0;
			LEVEL STATE.EX_OUT FOR 80.0;
			LEVEL STATE.EX_OUT2 FOR 80.0;
		}
		LEVEL STATE.FETCH FOR 80.0;
		LEVEL STATE.DECODE FOR 80.0;
		LEVEL STATE.EX_IN FOR 80.0;
		LEVEL STATE.EX_IN2 FOR 80.0;
		NODE
		{
			REPEAT = 138;
			LEVEL STATE.FETCH FOR 80.0;
			LEVEL STATE.DECODE FOR 80.0;
		}
		LEVEL STATE.FETCH FOR 80.0;
		LEVEL STATE.DECODE FOR 80.0;
		LEVEL STATE.FETCH FOR 50.0;
	}
}

TRANSITION_LIST("io_cycle")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 670.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 22290.0;
	}
}

TRANSITION_LIST("io_write")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 590.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 320.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 640.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 22530.0;
	}
}

TRANSITION_LIST("io_data[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 590.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 320.0;
		}
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 80.0;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 120.0;
			LEVEL X FOR 540.0;
			LEVEL 0 FOR 220.0;
		}
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 22410.0;
	}
}

TRANSITION_LIST("io_data[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 590.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 320.0;
		}
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 80.0;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 120.0;
			LEVEL X FOR 540.0;
			LEVEL 0 FOR 220.0;
		}
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 22410.0;
	}
}

TRANSITION_LIST("io_data[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 590.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 320.0;
		}
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 80.0;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 120.0;
			LEVEL X FOR 540.0;
			LEVEL 0 FOR 220.0;
		}
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 22410.0;
	}
}

TRANSITION_LIST("io_data[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 590.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 320.0;
		}
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 80.0;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 120.0;
			LEVEL X FOR 540.0;
			LEVEL 0 FOR 220.0;
		}
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 22410.0;
	}
}

TRANSITION_LIST("io_data[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 590.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 320.0;
		}
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 80.0;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 120.0;
			LEVEL X FOR 540.0;
			LEVEL 0 FOR 220.0;
		}
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 22410.0;
	}
}

TRANSITION_LIST("io_data[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 590.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 320.0;
		}
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 80.0;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 120.0;
			LEVEL X FOR 540.0;
			LEVEL 0 FOR 220.0;
		}
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 22410.0;
	}
}

TRANSITION_LIST("io_data[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 590.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 320.0;
		}
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 80.0;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 120.0;
			LEVEL X FOR 540.0;
			LEVEL 0 FOR 220.0;
		}
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 22410.0;
	}
}

TRANSITION_LIST("io_data[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 590.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 320.0;
		}
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 80.0;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 120.0;
			LEVEL X FOR 540.0;
			LEVEL 0 FOR 220.0;
		}
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 22410.0;
	}
}

TRANSITION_LIST("io_data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 590.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 320.0;
		}
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 80.0;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 120.0;
			LEVEL X FOR 540.0;
			LEVEL 0 FOR 220.0;
		}
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 22410.0;
	}
}

TRANSITION_LIST("io_data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 590.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 320.0;
		}
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 80.0;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 120.0;
			LEVEL X FOR 540.0;
			LEVEL 0 FOR 220.0;
		}
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 22410.0;
	}
}

TRANSITION_LIST("io_data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 590.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 320.0;
		}
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 320.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 540.0;
		LEVEL 0 FOR 220.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 540.0;
		LEVEL 1 FOR 220.0;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 22410.0;
	}
}

TRANSITION_LIST("io_data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 590.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 320.0;
		}
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 4;
			LEVEL Z FOR 320.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 540.0;
		LEVEL 1 FOR 220.0;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 540.0;
		LEVEL 0 FOR 220.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 22410.0;
	}
}

TRANSITION_LIST("io_data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 590.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 320.0;
		}
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 80.0;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 120.0;
			LEVEL X FOR 540.0;
			LEVEL 0 FOR 220.0;
		}
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 22410.0;
	}
}

TRANSITION_LIST("io_data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 590.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 320.0;
		}
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 80.0;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 120.0;
			LEVEL X FOR 540.0;
			LEVEL 0 FOR 220.0;
		}
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 22410.0;
	}
}

TRANSITION_LIST("io_data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 590.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 320.0;
			LEVEL 1 FOR 240.0;
			LEVEL Z FOR 320.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 240.0;
			LEVEL Z FOR 320.0;
		}
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 80.0;
			LEVEL 1 FOR 240.0;
			LEVEL Z FOR 120.0;
			LEVEL X FOR 540.0;
			LEVEL 1 FOR 220.0;
		}
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 22410.0;
	}
}

TRANSITION_LIST("io_data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 590.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 240.0;
			LEVEL Z FOR 320.0;
		}
		LEVEL 1 FOR 240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 320.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 320.0;
			LEVEL 1 FOR 240.0;
		}
		LEVEL Z FOR 320.0;
		LEVEL 0 FOR 240.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 540.0;
		LEVEL 0 FOR 220.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 540.0;
		LEVEL 1 FOR 220.0;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 240.0;
		LEVEL Z FOR 120.0;
		LEVEL X FOR 22410.0;
	}
}

TRANSITION_LIST("SRAM:inst8|STATE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL STATE.IDLE FOR 1810.0;
		NODE
		{
			REPEAT = 2;
			LEVEL STATE.WRITE_EN FOR 20.0;
			LEVEL STATE.DATA_SEND FOR 20.0;
			LEVEL STATE.WRITE_DISABLE FOR 20.0;
			LEVEL STATE.IDLE FOR 1060.0;
		}
		LEVEL STATE.WRITE_EN FOR 20.0;
		LEVEL STATE.DATA_SEND FOR 20.0;
		LEVEL STATE.WRITE_DISABLE FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL STATE.IDLE FOR 820.0;
			LEVEL STATE.READ_DATA1 FOR 20.0;
			LEVEL STATE.READ_DATA2 FOR 20.0;
			LEVEL STATE.READ_DATA3 FOR 20.0;
			LEVEL STATE.READ_DATA4 FOR 80.0;
			LEVEL STATE.IDLE FOR 100.0;
			LEVEL STATE.SEND FOR 140.0;
		}
		LEVEL STATE.IDLE FOR 820.0;
		LEVEL STATE.READ_DATA1 FOR 20.0;
		LEVEL STATE.READ_DATA2 FOR 20.0;
		LEVEL STATE.READ_DATA3 FOR 20.0;
		LEVEL STATE.READ_DATA4 FOR 80.0;
		LEVEL STATE.IDLE FOR 100.0;
		LEVEL STATE.SEND FOR 140.0;
		LEVEL STATE.IDLE FOR 22290.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk_50";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset_n";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "divider 2242";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	IS_DIVIDER = ON;
}

DISPLAY_LINE
{
	CHANNEL = "sram_addr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "sram_addr[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "sram_addr[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "sram_addr[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "sram_addr[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "sram_addr[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "sram_addr[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "sram_addr[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "sram_addr[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "sram_addr[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "sram_addr[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "sram_addr[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "sram_addr[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "sram_addr[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "sram_addr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "sram_addr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "sram_addr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "sram_addr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "sram_addr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "sram_dq";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
	CHILDREN = 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38;
}

DISPLAY_LINE
{
	CHANNEL = "sram_dq[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "sram_dq[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "sram_dq[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "sram_dq[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "sram_dq[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "sram_dq[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "sram_dq[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "sram_dq[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "sram_dq[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "sram_dq[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "sram_dq[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "sram_dq[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "sram_dq[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "sram_dq[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "sram_dq[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "sram_dq[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "sram_oe_n";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 39;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sram_we_n";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 40;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "divider 1743";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
	IS_DIVIDER = ON;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 0;
	CHILDREN = 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|STATE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 59;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "io_cycle";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "io_write";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "io_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 0;
	CHILDREN = 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78;
}

DISPLAY_LINE
{
	CHANNEL = "io_data[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "io_data[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "io_data[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "io_data[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "io_data[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "io_data[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "io_data[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "io_data[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "io_data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "io_data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "io_data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "io_data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "io_data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "io_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "io_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "io_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 62;
}

DISPLAY_LINE
{
	CHANNEL = "SRAM:inst8|STATE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 19800;
	MASTER = TRUE;
}
;
